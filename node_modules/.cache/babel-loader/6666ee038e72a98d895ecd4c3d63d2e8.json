{"ast":null,"code":"var _jsxFileName = \"/Users/Justin/Desktop/lab/src/components/App.js\";\nimport React, { Component } from 'react'; // function App(props){\n//     return(\n//         <h1>{props.name}</h1>\n//     );\n// }\n// export default App;\n// class App extends Component{\n//     constructor(props){\n//         super(props)\n//         this.state={\n//             text:\"Good Morning Birmingham\",\n//             userInput:'',\n//             hasLoaded:false\n//         }\n//         this.handleClick=this.handleClick.bind(this);\n//     }\n//     handleInputChange=(value)=>{\n//         this.setState({userInput:value});\n//     }\n//     handleClick=(e)=>{\n//         this.setState({hasloaded:true})\n//     }\n//  render(){\n//     if (this.state.hasloaded){\n//         return (\n//             <React.Fragment>\n//     <h1>{this.props.name}...{this.state.text}</h1>\n//     <p>hello</p>\n//     <input \n//         value={this.state.userInput}\n//         placeholder={this.state.text}\n//         onChange={(event)=>this.handleInputChange(event.target.value)}\n//     />\n//     <button onClick={this.handleClick}>Click Me</button>\n//     </React.Fragment>\n//         )\n//     }else{\n//         return (\n//             <React.Fragment>\n//             <h1>Loading....</h1>\n//             <button onClick={this.handleClick}>Click Me</button>\n//             </React.Fragment>\n//             )\n//     }\n// }\n// }\n// export default App;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Toggle extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isToggleOn: true\n    }; // This binding is necessary to make `this` work in the callback\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.setState(state => ({\n      isToggleOn: !state.isToggleOn\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: this.handleClick,\n      children: this.state.isToggleOn ? 'ON' : 'OFF'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Toggle, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 88,\n  columnNumber: 5\n}, this), document.getElementById('root'));","map":{"version":3,"sources":["/Users/Justin/Desktop/lab/src/components/App.js"],"names":["React","Component","Toggle","constructor","props","state","isToggleOn","handleClick","bind","setState","render","ReactDOM","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B,C,CAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA;AACA;AAEA;;;;AAEA,MAAMC,MAAN,SAAqBF,KAAK,CAACC,SAA3B,CAAqC;AACjCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,UAAU,EAAE;AAAb,KAAb,CAFiB,CAIjB;;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAEDD,EAAAA,WAAW,GAAG;AACZ,SAAKE,QAAL,CAAcJ,KAAK,KAAK;AACtBC,MAAAA,UAAU,EAAE,CAACD,KAAK,CAACC;AADG,KAAL,CAAnB;AAGD;;AAEDI,EAAAA,MAAM,GAAG;AACP,wBACE;AAAQ,MAAA,OAAO,EAAE,KAAKH,WAAtB;AAAA,gBACG,KAAKF,KAAL,CAAWC,UAAX,GAAwB,IAAxB,GAA+B;AADlC;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AArBgC;;AAwBnCK,QAAQ,CAACD,MAAT,eACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,QADF,EAEEE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF","sourcesContent":["import React, {Component} from 'react'\n\n// function App(props){\n//     return(\n//         <h1>{props.name}</h1>\n//     );\n// }\n\n// export default App;\n\n// class App extends Component{\n//     constructor(props){\n//         super(props)\n//         this.state={\n//             text:\"Good Morning Birmingham\",\n//             userInput:'',\n//             hasLoaded:false\n//         }\n//         this.handleClick=this.handleClick.bind(this);\n\n//     }\n\n//     handleInputChange=(value)=>{\n//         this.setState({userInput:value});\n//     }\n//     handleClick=(e)=>{\n//         this.setState({hasloaded:true})\n//     }\n\n//  render(){\n\n//     if (this.state.hasloaded){\n//         return (\n//             <React.Fragment>\n//     <h1>{this.props.name}...{this.state.text}</h1>\n//     <p>hello</p>\n//     <input \n//         value={this.state.userInput}\n//         placeholder={this.state.text}\n//         onChange={(event)=>this.handleInputChange(event.target.value)}\n//     />\n//     <button onClick={this.handleClick}>Click Me</button>\n//     </React.Fragment>\n//         )\n\n//     }else{\n//         return (\n//             <React.Fragment>\n//             <h1>Loading....</h1>\n//             <button onClick={this.handleClick}>Click Me</button>\n//             </React.Fragment>\n           \n//             )\n//     }\n    \n   \n \n// }\n// }\n\n// export default App;\n\nclass Toggle extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {isToggleOn: true};\n  \n      // This binding is necessary to make `this` work in the callback\n      this.handleClick = this.handleClick.bind(this);\n    }\n  \n    handleClick() {\n      this.setState(state => ({\n        isToggleOn: !state.isToggleOn\n      }));\n    }\n  \n    render() {\n      return (\n        <button onClick={this.handleClick}>\n          {this.state.isToggleOn ? 'ON' : 'OFF'}\n        </button>\n      );\n    }\n  }\n  \n  ReactDOM.render(\n    <Toggle />,\n    document.getElementById('root')\n  );\n\n"]},"metadata":{},"sourceType":"module"}