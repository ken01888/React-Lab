{"ast":null,"code":"var _jsxFileName = \"/Users/Justin/Desktop/lab/src/components/App.js\";\nimport React, { Component } from 'react'; // function App(props){\n//     return(\n//         <h1>{props.name}</h1>\n//     );\n// }\n// export default App;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInputChange = value => {\n      this.setState({\n        userInput: value\n      });\n    };\n\n    this.handleClickTrue = () => {\n      this.setState({\n        hasLoaded: true\n      });\n    };\n\n    this.handleClickFalse = () => {\n      this.setState({\n        hasLoaded: false\n      });\n    };\n\n    this.state = {\n      text: \"Good Morning Birmingham\",\n      userInput: '',\n      hasLoaded: false\n    };\n  }\n\n  componentDidMount() {\n    this.state.hasLoaded;\n  }\n\n  render() {\n    if (!this.state.hasloaded) {\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Loading....\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.handleClickTrue,\n          children: \"Click Me\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [this.props.name, \"...\", this.state.text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: this.state.userInput,\n          placeholder: this.state.text,\n          onChange: event => this.handleInputChange(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.handleClickFalse,\n          children: \"Click Me\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this);\n    }\n  }\n\n}\n\nexport default App; // class Toggle extends React.Component {\n//     constructor(props) {\n//       super(props);\n//       this.state = {isToggleOn: true};\n//       // This binding is necessary to make `this` work in the callback\n//       this.handleClick = this.handleClick.bind(this);\n//     }\n//     handleClick() {\n//       this.setState(state => ({\n//         isToggleOn: !state.isToggleOn\n//       }));\n//     }\n//     render() {\n//       return (\n//         <button onClick={this.handleClick}>\n//           {this.state.isToggleOn ? 'ON' : 'OFF'}\n//         </button>\n//       );\n//     }\n//   }\n//   ;\n//   export default Toggle;","map":{"version":3,"sources":["/Users/Justin/Desktop/lab/src/components/App.js"],"names":["React","Component","App","constructor","props","handleInputChange","value","setState","userInput","handleClickTrue","hasLoaded","handleClickFalse","state","text","componentDidMount","render","hasloaded","name","event","target"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B,C,CAEA;AACA;AACA;AACA;AACA;AAEA;;;;AAEA,MAAMC,GAAN,SAAkBD,SAAlB,CAA2B;AACvBE,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAWlBC,iBAXkB,GAWCC,KAAD,IAAS;AACvB,WAAKC,QAAL,CAAc;AAACC,QAAAA,SAAS,EAACF;AAAX,OAAd;AACH,KAbiB;;AAAA,SAelBG,eAfkB,GAeF,MAAI;AAChB,WAAKF,QAAL,CACA;AACIG,QAAAA,SAAS,EAAC;AADd,OADA;AAIH,KApBiB;;AAAA,SAsBlBC,gBAtBkB,GAsBD,MAAI;AACjB,WAAKJ,QAAL,CACA;AACIG,QAAAA,SAAS,EAAC;AADd,OADA;AAIH,KA3BiB;;AAEd,SAAKE,KAAL,GAAW;AACPC,MAAAA,IAAI,EAAC,yBADE;AAEPL,MAAAA,SAAS,EAAC,EAFH;AAGPE,MAAAA,SAAS,EAAC;AAHH,KAAX;AAOH;;AAoBDI,EAAAA,iBAAiB,GAAE;AACf,SAAKF,KAAL,CAAWF,SAAX;AACH;;AAEJK,EAAAA,MAAM,GAAE;AAEL,QAAI,CAAC,KAAKH,KAAL,CAAWI,SAAhB,EAA0B;AACtB,0BACI,QAAC,KAAD,CAAO,QAAP;AAAA,gCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAQ,UAAA,OAAO,EAAE,KAAKP,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAOH,KARD,MAQK;AACD,0BACI,QAAC,KAAD,CAAO,QAAP;AAAA,gCACR;AAAA,qBAAK,KAAKL,KAAL,CAAWa,IAAhB,SAAyB,KAAKL,KAAL,CAAWC,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA,gBADQ,eAER;AACI,UAAA,KAAK,EAAE,KAAKD,KAAL,CAAWJ,SADtB;AAEI,UAAA,WAAW,EAAE,KAAKI,KAAL,CAAWC,IAF5B;AAGI,UAAA,QAAQ,EAAGK,KAAD,IAAS,KAAKb,iBAAL,CAAuBa,KAAK,CAACC,MAAN,CAAab,KAApC;AAHvB;AAAA;AAAA;AAAA;AAAA,gBAFQ,eAOR;AAAQ,UAAA,OAAO,EAAE,KAAKK,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPQ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAYH;AAAC;;AAzDqB;;AA6D3B,eAAeT,GAAf,C,CAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, {Component} from 'react'\n\n// function App(props){\n//     return(\n//         <h1>{props.name}</h1>\n//     );\n// }\n\n// export default App;\n\nclass App extends Component{\n    constructor(props){\n        super(props)\n        this.state={\n            text:\"Good Morning Birmingham\",\n            userInput:'',\n            hasLoaded:false\n        }\n\n\n    }\n\n    handleInputChange=(value)=>{\n        this.setState({userInput:value});\n    }\n\n    handleClickTrue=()=>{\n        this.setState(\n        {\n            hasLoaded:true\n        })\n    }\n\n    handleClickFalse=()=>{\n        this.setState(\n        {\n            hasLoaded:false\n        })\n    }\n\n    componentDidMount(){\n        this.state.hasLoaded\n    }\n\n render(){\n\n    if (!this.state.hasloaded){\n        return (\n            <React.Fragment>\n            <h1>Loading....</h1>\n            <button onClick={this.handleClickTrue}>Click Me</button>\n            </React.Fragment>\n           \n            )\n    }else{\n        return (\n            <React.Fragment>\n    <h1>{this.props.name}...{this.state.text}</h1>\n    <input \n        value={this.state.userInput}\n        placeholder={this.state.text}\n        onChange={(event)=>this.handleInputChange(event.target.value)}\n    />\n    <button onClick={this.handleClickFalse}>Click Me</button>\n    </React.Fragment>\n        )\n\n    }}}\n    \n    \n\nexport default App;\n\n// class Toggle extends React.Component {\n//     constructor(props) {\n//       super(props);\n//       this.state = {isToggleOn: true};\n  \n//       // This binding is necessary to make `this` work in the callback\n//       this.handleClick = this.handleClick.bind(this);\n//     }\n  \n//     handleClick() {\n//       this.setState(state => ({\n//         isToggleOn: !state.isToggleOn\n//       }));\n//     }\n  \n//     render() {\n//       return (\n//         <button onClick={this.handleClick}>\n//           {this.state.isToggleOn ? 'ON' : 'OFF'}\n//         </button>\n//       );\n//     }\n//   }\n//   ;\n\n//   export default Toggle;\n\n"]},"metadata":{},"sourceType":"module"}